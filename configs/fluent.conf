<source>
  @type  forward
  port  24224
</source>

<source>
  @type cloudwatch_logs
  tag cloudwatch.in
  log_group_name /aws/lambda/activeGateLoggingTest
  #add_log_group_name true
  #log_group_name_key group_name_key
  #use_log_group_name_prefix true
  log_stream_name activeGateLoggingTest
  #use_log_stream_name_prefix true
  #state_file /var/lib/fluent/group_stream.in.state
  #endpoint http://localhost:5000/
  #json_handler json
  # start_time "2020-03-01 00:00:00Z"
  # end_time "2020-04-30 15:00:00Z"
  # time_range_format "%Y-%m-%d %H:%M:%S%z"
  # Users can use `format` or `<parse>` directive to parse non-JSON CloudwatchLogs' log
  # format none # or csv, tsv, regexp etc.
  #<parse>
  # @type none # or csv, tsv, regexp etc.
  #</parse>
  #<storage>
  # @type local # or redis, memcached, etc.
  #</storage>
  #<web_identity_credentials>
  #  role_arn          "#{ENV['AWS_ROLE_ARN']}"
  #  role_session_name ROLE_SESSION_NAME
  #  web_identity_token_file "#{ENV['AWS_WEB_IDENTITY_TOKEN_FILE']}"
  #</web_identity_credentials>
</source>

<match cloudwatch.in**>
  @type copy
  #write to log file
  <store>
    @type file
    path         /fluentd/log/application/cloudwatch.*.log
    symlink_path /fluentd/log/application/cloudwatch.log
  </store>
</match>

<filter **>
  @type stdout
</filter>

# Format application log schema
@include logformatter.fluent.conf

# Relabel based on tags
@include relabel.fluent.conf

# Write logs to dynatrace
<label @APPLICATION>
  @include application.fluent.conf
</label>

# Write logs to splunk
<label @SECURITY>
  @include security.fluent.conf
</label>

# Write logs to daemon files
<label @FLUENTDAEMON>
  @include daemon.fluent.conf
</label>